// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1.2 effective-5.10 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
// swift-module-flags: -target arm64-apple-ios18.5-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -module-name ALSLFramework
// swift-module-flags-ignorable:  -interface-compiler-version 6.1.2
import Combine
import CoreData
import Foundation
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims

public enum ShoppingListFactory {
  public static func makeViewController() -> any ALSLFramework.ShoppingListFactoryProtocol
}
public protocol ShoppingListFactoryProtocol : AnyObject {
  func present(from parent: UIKit.UIViewController)
}


@_inheritsConvenienceInitializers @objc(ShoppingList) public class ShoppingList : CoreData.NSManagedObject {
  @objc override dynamic public init(entity: CoreData.NSEntityDescription, insertInto context: CoreData.NSManagedObjectContext?)
  @objc deinit
}
extension ALSLFramework.ShoppingList {
  @nonobjc public class func fetchRequest() -> CoreData.NSFetchRequest<ALSLFramework.ShoppingList>
  @objc @NSManaged dynamic public var buyingDate: Foundation.Date? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var isBought: Swift.Bool {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var name: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var note: Swift.String? {
    @objc get
    @objc set
  }
  @objc @NSManaged dynamic public var quantity: Swift.Int64 {
    @objc get
    @objc set
  }
}
extension ALSLFramework.ShoppingList : Swift.Identifiable {
  public typealias ID = Swift.ObjectIdentifier
}
